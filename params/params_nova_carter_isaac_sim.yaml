env: # Env parameters mainly used for env generation
  start: [-21.8, -17.8] # origin of domain
  shape:
    x: 175 # Number of grid points
    y: 175
  start_loc: [-20.0, -20.0] # Agent start location, overwritten by params_env.yaml
  start_angle: 3.14159
  goal_loc: [-10.0, -5.0] # Agent goal location, overwritten by params_env.yaml
  n_players: 1
  Cx_lengthscale: 1.0 # Lenghtscale to generate the constraint for the environment
  Cx_noise: 0.001 # Noise std use to generate environment samples
  Fx_lengthscale: 3.0 # Same as Cx_lengthscale, if objective is also from a GP sample
  Fx_noise: 0.001
  Cx_beta: 1.5 # Scaling of beta. Defualt in gpytorch is 2. 1.5 represents 2x1.5 = 3
  Fx_beta: 1.5
  generate: True # Set True, False, walls, None: use some fixed save path
  block_env: True
  env_file_name: "env_data.pkl" # Name of the env file to load if generate= false and save if generate = true
  cov_module: "Matern" # Kernel used in generation options: 'Matern', Sq_exp, 'Poly'
  compute_true_Lipschitz: False # Set true to compute true L_q

visu:
  show: False # Turn on the visualization
  show_current_loc: False # Show current location of the agent
  step_size: 0.04 # Step size for the visualization
  opti_path: True # Show the optimistic path generate by Problem 18/ discrete path in optimistic set
  show_path: True # Show the path travelled by the agent
  show_opti_set: False # Show the optimistic set

agent:
  dynamics: "nova_carter" # Robot dynamics, possible options: "unicycle", "bicycle", "NH_intergrator" , "int"
  Cx_lengthscale: 0.7 # Lenghtscale used by the agent for belief of the environment
  Cx_noise: 0.0001 # Noise std used by the agent for belief of the environment
  Fx_lengthscale: 1.5 # Same as Cx_lengthscale, if objective is also from a GP sample
  Fx_noise: 0.01
  Cx_beta: 1.5 # 1.5                               # Scaling of beta used by agent. Defualt in gpytorch is 2. 1.5 represents 2x1.5 = 3
  Fx_beta: 2.0 #1.5
  mean_shift_val: 2 # shift the mean of GP
  cov_module: "Matern" # kernel used by the agent : 'Matern', Sq_exp

optimizer:
  H: 25 # Horizon
  Hm: 13 # Sampling horizon, somewhere in the middle of the horizon
  u_min: [-0.5, -0.5] # Constraints on action space, Minimum control input
  u_max: [0.5, 0.5] # Constraints on action space, Maximum control input         x,y,v,theta,theta_dot
  # u_min: [-1.0, -1.0] # Constraints on action space, Minimum control input
  # u_max: [1.0, 1.0] # Constraints on action space, Maximum control input         x,y,v,theta,theta_dot
  x_min: [-21.8, -21.8] # Constraints on state space, Minimum state value
  x_max: [2.0, 2.0] # Constraints on state space, Maximum state value
  linear_solver: "ma57" # linear solver used by the optimizer, see https://coin-or.github.io/Ipopt/OPTIONS.html#OPT_linear_solver
  oracle: # Oracle computes the optimistic goal $x^{g,o}$                                            # Oracle computes the optimistic goal $x^{g,o}$
    max_sqp_iter: 10
    tol_nlp: 1.0e-6
  SEMPC: # Parameters for the SageMPC
    max_sqp_iter: 20  # Maximum number of SQP iterations
    tol_nlp: 1.0e-4 # Tolerance for the NLP solver
  Tf: 5.0 # sampling time = Tf/H
  order: 1
  x_dim: 2
  # dt: 0.035 # 0.010                                 # Lower bound on the discret time step for the dynamics
  w: 5000 # Cost function weight for the x(H')

common:
  dim: 2
  constraint: 0.6 # Constraint threshold for safety function
  epsilon: 0.2 # user defined accuracy
  Lc: 1.0 # Lipschitz constant of the constraint function
  expander_offset: 0.1
  Lc_lin_tol: 0.001
  backtrack: True

algo:
  objective: "GO" # Objective of the algorithm, options: "GO", "SE" (goal-oriented, maximum domain safe exploration)
  type: "MPC_expander_V0" # Variant of the SageOC, "ret", "ret_expander", "MPC_expander", "MPC", "MPC_Xn", "MPC_V0"
  init: "past_iterate" # Warmstart based on past iterate discrete path

experiment:
  name: "goMPC" # Random name of the experiment
  generate_regret_plot: True # Set True to generate the regret plot
  folder: "nova_carter_isaac_sim" # Folder to pick up the environment type and save the results
  use_isaac_sim: False
  plot_contour: True
  plot_per_sqp_iter: False
  batch_update: True
  batch_size: 5